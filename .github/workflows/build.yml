name: Build
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      
      - name: Build Windows
        run: cargo build --release --target x86_64-pc-windows-msvc
        
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-ftch
          path: target/x86_64-pc-windows-msvc/release/ftch.exe
  
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-darwin
      
      - name: Build macOS Intel
        run: cargo build --release --target x86_64-apple-darwin
        
      - name: Build macOS Apple Silicon
        run: cargo build --release --target aarch64-apple-darwin
        
      - name: Create macOS Bundle
        run: |
          mkdir -p macos-ftch
          cp target/x86_64-apple-darwin/release/ftch macos-ftch/ftch-intel
          cp target/aarch64-apple-darwin/release/ftch macos-ftch/ftch-arm
          chmod +x macos-ftch/*
          
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-ftch
          path: macos-ftch/*
  
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu
      
      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build Linux x86_64
        run: cargo build --release --target x86_64-unknown-linux-gnu
        
      - name: Build Linux ARM64
        run: |
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          cargo build --release --target aarch64-unknown-linux-gnu
        
      - name: Create Linux Bundle
        run: |
          mkdir -p linux-ftch
          cp target/x86_64-unknown-linux-gnu/release/ftch linux-ftch/ftch-x86_64
          cp target/aarch64-unknown-linux-gnu/release/ftch linux-ftch/ftch-arm64
          chmod +x linux-ftch/*
        
      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-ftch
          path: linux-ftch/*